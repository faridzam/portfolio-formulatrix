import{importShared as g}from"../../../../__federation_fn_import-yTQldjZa.js";const{Color:m,DefaultLoadingManager:k,FileLoader:w,FrontSide:b,Loader:M,LoaderUtils:L,MeshPhongMaterial:x,RepeatWrapping:v,TextureLoader:y,Vector2:u,SRGBColorSpace:O}=await g("three");class A extends M{constructor(e){super(e)}load(e,o,n,t){const i=this,c=this.path===""?L.extractUrlBase(e):this.path,r=new w(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,function(s){try{o(i.parse(s,c))}catch(a){t?t(a):console.error(a),i.manager.itemError(e)}},n,t)}setMaterialOptions(e){return this.materialOptions=e,this}parse(e,o){const n=e.split(`
`);let t={};const i=/\s+/,c={};for(let s=0;s<n.length;s++){let a=n[s];if(a=a.trim(),a.length===0||a.charAt(0)==="#")continue;const p=a.indexOf(" ");let l=p>=0?a.substring(0,p):a;l=l.toLowerCase();let h=p>=0?a.substring(p+1):"";if(h=h.trim(),l==="newmtl")t={name:h},c[h]=t;else if(l==="ka"||l==="kd"||l==="ks"||l==="ke"){const f=h.split(i,3);t[l]=[parseFloat(f[0]),parseFloat(f[1]),parseFloat(f[2])]}else t[l]=h}const r=new F(this.resourcePath||o,this.materialOptions);return r.setCrossOrigin(this.crossOrigin),r.setManager(this.manager),r.setMaterials(c),r}}class F{constructor(e="",o={}){this.baseUrl=e,this.options=o,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.crossOrigin="anonymous",this.side=this.options.side!==void 0?this.options.side:b,this.wrap=this.options.wrap!==void 0?this.options.wrap:v}setCrossOrigin(e){return this.crossOrigin=e,this}setManager(e){this.manager=e}setMaterials(e){this.materialsInfo=this.convert(e),this.materials={},this.materialsArray=[],this.nameLookup={}}convert(e){if(!this.options)return e;const o={};for(const n in e){const t=e[n],i={};o[n]=i;for(const c in t){let r=!0,s=t[c];const a=c.toLowerCase();switch(a){case"kd":case"ka":case"ks":this.options&&this.options.normalizeRGB&&(s=[s[0]/255,s[1]/255,s[2]/255]),this.options&&this.options.ignoreZeroRGBs&&s[0]===0&&s[1]===0&&s[2]===0&&(r=!1);break}r&&(i[a]=s)}}return o}preload(){for(const e in this.materialsInfo)this.create(e)}getIndex(e){return this.nameLookup[e]}getAsArray(){let e=0;for(const o in this.materialsInfo)this.materialsArray[e]=this.create(o),this.nameLookup[o]=e,e++;return this.materialsArray}create(e){return this.materials[e]===void 0&&this.createMaterial_(e),this.materials[e]}createMaterial_(e){const o=this,n=this.materialsInfo[e],t={name:e,side:this.side};function i(r,s){return typeof s!="string"||s===""?"":/^https?:\/\//i.test(s)?s:r+s}function c(r,s){if(t[r])return;const a=o.getTextureParams(s,t),p=o.loadTexture(i(o.baseUrl,a.url));p.repeat.copy(a.scale),p.offset.copy(a.offset),p.wrapS=o.wrap,p.wrapT=o.wrap,(r==="map"||r==="emissiveMap")&&(p.colorSpace=O),t[r]=p}for(const r in n){const s=n[r];let a;if(s!=="")switch(r.toLowerCase()){case"kd":t.color=new m().fromArray(s).convertSRGBToLinear();break;case"ks":t.specular=new m().fromArray(s).convertSRGBToLinear();break;case"ke":t.emissive=new m().fromArray(s).convertSRGBToLinear();break;case"map_kd":c("map",s);break;case"map_ks":c("specularMap",s);break;case"map_ke":c("emissiveMap",s);break;case"norm":c("normalMap",s);break;case"map_bump":case"bump":c("bumpMap",s);break;case"map_d":c("alphaMap",s),t.transparent=!0;break;case"ns":t.shininess=parseFloat(s);break;case"d":a=parseFloat(s),a<1&&(t.opacity=a,t.transparent=!0);break;case"tr":a=parseFloat(s),this.options&&this.options.invertTrProperty&&(a=1-a),a>0&&(t.opacity=1-a,t.transparent=!0);break}}return this.materials[e]=new x(t),this.materials[e]}getTextureParams(e,o){const n={scale:new u(1,1),offset:new u(0,0)},t=e.split(/\s+/);let i;return i=t.indexOf("-bm"),i>=0&&(o.bumpScale=parseFloat(t[i+1]),t.splice(i,2)),i=t.indexOf("-s"),i>=0&&(n.scale.set(parseFloat(t[i+1]),parseFloat(t[i+2])),t.splice(i,4)),i=t.indexOf("-o"),i>=0&&(n.offset.set(parseFloat(t[i+1]),parseFloat(t[i+2])),t.splice(i,4)),n.url=t.join(" ").trim(),n}loadTexture(e,o,n,t,i){const c=this.manager!==void 0?this.manager:k;let r=c.getHandler(e);r===null&&(r=new y(c)),r.setCrossOrigin&&r.setCrossOrigin(this.crossOrigin);const s=r.load(e,n,t,i);return o!==void 0&&(s.mapping=o),s}}export{A as MTLLoader};
