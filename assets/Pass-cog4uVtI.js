import{importShared as r}from"./__federation_fn_import-yTQldjZa.js";const{BufferGeometry:i,Float32BufferAttribute:t,OrthographicCamera:a,Mesh:n}=await r("three");class l{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const o=new a(-1,1,1,-1,0,1);class h extends i{constructor(){super(),this.setAttribute("position",new t([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new t([0,2,0,0,2,0],2))}}const m=new h;class u{constructor(e){this._mesh=new n(m,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,o)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}export{u as F,l as P};
